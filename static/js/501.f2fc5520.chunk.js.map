{"version":3,"file":"static/js/501.f2fc5520.chunk.js","mappings":"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","sources":["configs/projectdata.tsx","components/logo.tsx","components/header.tsx","components/footer.tsx","pages/layout.tsx","components/projectDetailsComponent.tsx","pages/projectDetails.tsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["export const projectData = [\n  {\n    logo: \"./image\",\n    image:\n      \"https://api.backlinko.com/app/uploads/2019/12/the-classic-list-post.png\",\n\n    en: {\n      title: \"latest posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"آخرین پست‌ها\",\n      description: \"آخرین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"recent-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2021-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://www.blogtyrant.com/wp-content/uploads/2017/02/how-to-write-a-good-blog-post.png\",\n    en: {\n      title: \"first posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"نخستین پست‌ها\",\n      description: \"نخستین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"first-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2020-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://api.backlinko.com/app/uploads/2019/12/the-classic-list-post.png\",\n\n    en: {\n      title: \"latest posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"آخرین پست‌ها\",\n      description: \"آخرین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"recent-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2021-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://www.blogtyrant.com/wp-content/uploads/2017/02/how-to-write-a-good-blog-post.png\",\n    en: {\n      title: \"first posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"نخستین پست‌ها\",\n      description: \"نخستین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"first-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2020-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://api.backlinko.com/app/uploads/2019/12/the-classic-list-post.png\",\n\n    en: {\n      title: \"latest posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"آخرین پست‌ها\",\n      description: \"آخرین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"recent-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2021-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://www.blogtyrant.com/wp-content/uploads/2017/02/how-to-write-a-good-blog-post.png\",\n    en: {\n      title: \"first posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"نخستین پست‌ها\",\n      description: \"نخستین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"first-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2020-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://api.backlinko.com/app/uploads/2019/12/the-classic-list-post.png\",\n\n    en: {\n      title: \"latest posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"آخرین پست‌ها\",\n      description: \"آخرین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"recent-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2021-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://www.blogtyrant.com/wp-content/uploads/2017/02/how-to-write-a-good-blog-post.png\",\n    en: {\n      title: \"first posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"نخستین پست‌ها\",\n      description: \"نخستین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"first-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2020-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n];\n","import React from \"react\";\nimport { commonArgs } from \"../configs/types\";\nfunction logo({ lang, theme }: commonArgs) {\n  return (\n    <a href=\"/\" className=\"font-sacramento text-slate-600 text-xl\">\n      Mohammadreza Amani\n    </a>\n  );\n}\n\nexport default logo;\n","import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n} from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { getMenuItems, langs } from \"../configs/site\";\nimport Logo from \"./logo\";\nimport TranslateIcon from \"@mui/icons-material/Translate\";\nimport { fullArgs } from \"../configs/types\";\n\nfunction Header({ lang, toggleLang, theme, toggleTheme }: fullArgs) {\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  console.log(lang);\n  const toggleDrawer =\n    (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\n      if (\n        event.type === \"keydown\" &&\n        ((event as React.KeyboardEvent).key === \"Tab\" ||\n          (event as React.KeyboardEvent).key === \"Shift\")\n      ) {\n        return;\n      }\n      setDrawerOpen(open);\n    };\n\n  const iconTextColor = \"text-slate-600\";\n\n  return (\n    <AppBar\n      className={`header-default black-logo-version shadow-lg`}\n      position=\"sticky\"\n      style={{ backgroundColor: theme.background }}\n    >\n      <Toolbar className=\"flex justify-between items-center sm:mx-20\">\n        <Logo lang=\"lang\" theme={theme} />\n        <div className=\"flex items-center\">\n          <nav className=\"mainmenu-nav navbar-example2 hidden sm:block\">\n            <ul className=\"primary-menu flex flex-col space-y-2 sm:flex-row sm:space-x-2 sm:space-y-0\">\n              {getMenuItems(lang).map((item, index) => (\n                <li className=\"nav-item\" key={index}>\n                  <a href={item.slug}>\n                    <Tooltip title={item.text}>\n                      <IconButton color=\"inherit\">{item.icon}</IconButton>\n                    </Tooltip>\n                  </a>\n                </li>\n              ))}\n              <li className=\"nav-item\" key=\"change language\">\n                <Tooltip\n                  title={langs[lang as keyof typeof langs].full}\n                  onClick={toggleLang}\n                >\n                  <IconButton color=\"inherit\">\n                    <TranslateIcon className={iconTextColor} />\n                  </IconButton>\n                </Tooltip>\n              </li>\n            </ul>\n          </nav>\n        </div>\n        <div className=\"block sm:hidden\">\n          <Tooltip title=\"menu\">\n            <IconButton\n              className=\"hamberger-menu\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              onClick={toggleDrawer(true)}\n            >\n              <MenuIcon className=\"text-slate-600\" />\n            </IconButton>\n          </Tooltip>\n          <Drawer\n            anchor={\n              langs[lang as keyof typeof langs].dir === \"rtl\" ? \"right\" : \"left\"\n            }\n            open={drawerOpen}\n            onClose={toggleDrawer(false)}\n            className=\"drawer-menu rounded-lg\"\n          >\n            <div className=\"p-4 pt-20\">\n              <List>\n                {getMenuItems(lang).map((item, index) => (\n                  <ListItem button key={index}>\n                    <a href={item.slug}>\n                      <ListItemIcon>{item.icon}</ListItemIcon>\n                      <ListItemText primary={item.text} />\n                    </a>\n                  </ListItem>\n                ))}\n                <ListItem button key={\"lang\"} onClick={toggleLang}>\n                  <ListItemIcon>\n                    <TranslateIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={langs[lang as keyof typeof langs].full}\n                  />\n                </ListItem>\n              </List>\n            </div>\n          </Drawer>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { siteConfig } from \"../configs/site\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport { commonArgs } from \"../configs/types\";\n\nfunction Footer({ lang, theme }: commonArgs) {\n  return (\n    <div className=\"w-full\">\n      <footer className=\"bg-black text-white text-center p-4\">\n        <p className=\"text-sm\">\n          {siteConfig.en.author} © {new Date().getFullYear()}\n        </p>\n        <p className=\"text-sm\">\n          {siteConfig.en.author} is open-source on{\" \"}\n          <a\n            href={siteConfig.github}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-white\"\n          >\n            <GitHubIcon />\n          </a>\n        </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default Footer;\n","import Header from \"../components/header\";\nimport Footer from \"../components/footer\";\nimport { veryFullArgs } from \"../configs/types\";\n\nexport function Layout({\n  lang,\n  toggleLang,\n  theme,\n  toggleTheme,\n  children,\n}: veryFullArgs) {\n  return (\n    <div className=\"flex flex-col justify-between h-screen\">\n      <div className=\"flex flex-col w-full\">\n        <Header\n          lang={lang}\n          toggleLang={toggleLang}\n          theme={theme}\n          toggleTheme={toggleTheme}\n        />\n        {children}\n      </div>\n      <Footer lang={lang} theme={theme} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { projectItemTypes } from \"../configs/types\";\nimport { Card, CardContent, Grid, Typography } from \"@mui/material\"; // Import Material-UI components\n\nexport function ProjectDetailsComponent({\n  lang,\n  theme,\n  project,\n}: projectItemTypes) {\n  return (\n    <div className=\"mx-4\">\n      <Card className=\"max-w-3xl mx-auto mt-8 bg-white shadow-md rounded-lg overflow-hidden \">\n        <CardContent>\n          <div className=\"flex items-center mb-4\">\n            <img src={project.logo} alt=\"logo\" className=\"w-16 h-auto mr-4\" />\n            <div>\n              <Typography variant=\"h5\" className=\"mb-1\">\n                {lang === \"en\" ? project.en.title : project.fa.title}\n              </Typography>\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                {project.created_at}\n              </Typography>\n            </div>\n          </div>\n          <img\n            src={project.image}\n            alt=\"project\"\n            className=\"w-full mb-4 rounded-lg\"\n          />\n          <Typography variant=\"body1\" className=\"mb-4\">\n            {lang === \"en\" ? project.en.description : project.fa.description}\n          </Typography>\n          <div className=\"project-content\">\n            {lang === \"en\" ? project.en.data : project.fa.data}\n          </div>\n        </CardContent>\n        <Grid container spacing={2} className=\"p-4\">\n          {project.tags.map((tag, index) => (\n            <Grid item key={index}>\n              <Typography\n                variant=\"caption\"\n                className=\"bg-gray-200 p-1 rounded-md\"\n              >\n                {tag}\n              </Typography>\n            </Grid>\n          ))}\n        </Grid>\n      </Card>\n    </div>\n  );\n}\n","import { fullArgs } from \"../configs/types\";\nimport { Layout } from \"./layout\";\nimport { useParams } from \"react-router-dom\";\nimport { ProjectDetailsComponent } from \"../components/projectDetailsComponent\";\nimport { projectData } from \"../configs/projectdata\";\nexport function ProjectDetails({\n  lang,\n  toggleLang,\n  theme,\n  toggleTheme,\n}: fullArgs) {\n  const { projectslug } = useParams();\n  const project = projectData.find((project) => project.slug === projectslug);\n  if (!project) {\n    return <div>Not Found</div>;\n  }\n  return (\n    <Layout\n      lang={lang}\n      toggleLang={toggleLang}\n      theme={theme}\n      toggleTheme={toggleTheme}\n      children={\n        <ProjectDetailsComponent lang={lang} theme={theme} project={project} />\n      }\n    />\n  );\n}\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["projectData","logo","image","en","title","description","data","_jsx","children","fa","slug","related_posts","tags","category","created_at","updated_at","_ref","lang","theme","href","className","toggleLang","toggleTheme","drawerOpen","setDrawerOpen","React","console","log","toggleDrawer","open","event","type","key","AppBar","position","style","backgroundColor","background","_jsxs","Toolbar","Logo","getMenuItems","map","item","index","Tooltip","text","IconButton","color","icon","langs","full","onClick","TranslateIcon","MenuIcon","Drawer","anchor","dir","onClose","List","ListItem","button","ListItemIcon","ListItemText","primary","siteConfig","author","Date","getFullYear","github","target","rel","GitHubIcon","Layout","Header","Footer","ProjectDetailsComponent","project","Card","CardContent","src","alt","Typography","variant","Grid","container","spacing","tag","ProjectDetails","projectslug","useParams","find","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","inProps","ref","useThemeProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as"],"sourceRoot":""}