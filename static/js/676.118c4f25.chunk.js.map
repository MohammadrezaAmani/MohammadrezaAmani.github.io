{"version":3,"file":"static/js/676.118c4f25.chunk.js","mappings":"4LAOe,SAASA,EAAWC,GAAqC,IAApC,MAAEC,EAAK,KAAEC,EAAI,KAAEC,GAAkBH,EACnE,MAAM,SAAEI,IAAaC,EAAAA,EAAAA,KAEfC,EAAOC,EAAAA,EAASC,MAAMC,GAASA,EAAKN,OAASC,IAEnD,OAAKE,GAIEI,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAACT,KAAMA,EAAMD,MAAOA,EAAOE,KAAMA,EAAMG,KAAMA,KAHxDI,EAAAA,EAAAA,KAACE,EAAAA,EAAQ,GAInB,C,uDCfA,MAwBA,EAxBqBC,KAEjBH,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iEAAgEC,UAC7EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2BAA0BC,SAAA,EACvCL,EAAAA,EAAAA,KAAA,MAAII,UAAU,iCAAgCC,SAAC,SAC/CL,EAAAA,EAAAA,KAAA,MAAII,UAAU,sCAAqCC,SAAC,0BAGpDC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,qBAAoBC,SAAA,CAAC,2DAEhCL,EAAAA,EAAAA,KAAA,SAAM,KAACA,EAAAA,EAAAA,KAAA,SAAO,KACdM,EAAAA,EAAAA,MAAA,KACEC,KAAK,IACLH,UAAU,8GAA6GC,SAAA,CAEtH,IAAI,kBACW,c,6ECZrB,SAASJ,EAAWX,GAAyC,IAAxC,MAAEC,EAAK,KAAEC,EAAI,KAAEC,EAAI,KAAEG,GAAgBN,EAC3DkB,EAAYZ,EAAKa,MAAMX,MAAMC,GAASA,EAAKP,OAASA,IAMxD,OALAkB,QAAQC,IAAIH,EAAWhB,EAAMI,EAAKa,OAC7BD,IACHA,EAAYZ,EAAKa,MAAM,IAEzBhB,EAAOA,EAAKmB,MAAM,KAAK,IAErBZ,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wEAAuEC,SAAA,EACpFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EACjCL,EAAAA,EAAAA,KAAA,OAAKa,IAAKjB,EAAKkB,KAAMC,IAAI,OAAOX,UAAU,sBAC1CJ,EAAAA,EAAAA,KAAA,MAAII,UAAU,OAAMC,SAAEG,EAAUQ,YAElChB,EAAAA,EAAAA,KAAA,KAAGI,UAAU,wBAAuBC,SACjCT,EAAKqB,iBAGVjB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,eACfJ,EAAAA,EAAAA,KAAA,OAAAK,UACEL,EAAAA,EAAAA,KAAA,KACEO,KAAMW,EAAAA,GAAUzB,EAChBW,UAAU,gCAA+BC,UAEzCL,EAAAA,EAAAA,KAACmB,EAAAA,IAAqB,CAACf,UAAU,oBAIvCJ,EAAAA,EAAAA,KAAA,OAAKa,IAAKjB,EAAKwB,MAAOL,IAAI,OAAOX,UAAU,4BAC3CJ,EAAAA,EAAAA,KAAA,KAAGI,UAAU,OAAMC,SAAEG,EAAUa,eAC/BrB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,4CAA2CC,SACvDG,EAAUZ,WAGfI,EAAAA,EAAAA,KAAA,OAAKI,UAAU,mEAAkEC,SAC9ET,EAAK0B,KAAKC,KAAI,CAACC,EAAKC,KACnBzB,EAAAA,EAAAA,KAAA,OAAAK,UACEL,EAAAA,EAAAA,KAAA,KAAGI,UAAU,qCAAqCG,KAAMW,EAAAA,GAAUQ,EAAAA,EAAOC,SAASC,KAAO,IAAMJ,EAAInB,SAChG,IAAMmB,KAFDC,WAUtB,C","sources":["app/search/[searchid]/page.tsx","components/404.tsx","components/dataResultDetailsComponent.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { DataDetails } from \"../../../components/dataResultDetailsComponent\";\n\nimport { commonArgs } from \"../../../configs/types\";\nimport  BlogData  from \"../../../configs/blog/data\";\nimport NotFound  from \"../../../components/404\";\n\nexport default function BlogDetails({ theme, lang, slug }: commonArgs) {\n  const { searchid } = useParams();\n\n  const data = BlogData.find((item) => item.slug === searchid);\n\n  if (!data) {\n    return<NotFound />\n  }\n\n  return <DataDetails lang={lang} theme={theme} slug={slug} data={data} />;\n}\n","import React from \"react\";\n\nconst NotFoundPage = () => {\n  return (\n    <div className=\"flex flex-col sm:flex-row items-center justify-center h-screen\">\n      <div className=\"text-center sm:text-left\">\n        <h1 className=\"text-4xl sm:text-8xl font-bold\">404</h1>\n        <h2 className=\"text-2xl sm:text-6xl font-bold mb-4\">\n          Oops! Page Not Found\n        </h2>\n        <p className=\"text-lg sm:text-xl\">\n          Sorry, but the page you are looking for does not exist.\n          <br /> <br />{\" \"}\n          <a\n            href=\"/\"\n            className=\"inline-block shadow-lg rounded-md p-4 text-green-500 hover:bg-green-100 transition duration-300 ease-in-out\"\n          >\n            {\" \"}\n            Visit Home Page{\" \"}\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFoundPage;\n","import { IoReturnUpBackOutline } from \"react-icons/io5\";\n\nimport { dataType } from \"../configs/types\";\nimport { routes } from \"../configs/routes\";\nimport { BaseUri } from \"../configs/site\";\n\nexport function DataDetails({ theme, lang, slug, data }: dataType) {\n  let lang_data = data.langs.find((item) => item.lang === lang);\n  console.log(lang_data, lang, data.langs);\n  if (!lang_data) {\n    lang_data = data.langs[0];\n  }\n  slug = slug.split(\":\")[0];\n  return (\n    <div className=\"mx-4\">\n      <div className=\"max-w-3xl mx-auto mt-8 bg-white shadow-md rounded-lg overflow-hidden \">\n        <div className=\"p-6\">\n          <div className=\"flex items-center mb-4\">\n            <div className=\"flex flex-col\">\n              <div className=\"flex items-center \">\n                <img src={data.logo} alt=\"logo\" className=\"w-16 h-auto mr-4\" />\n                <h5 className=\"mb-1\">{lang_data.title}</h5>\n              </div>\n              <p className=\"text-sm text-gray-500\">\n                {data.created_at}\n              </p>\n            </div>\n            <div className=\"flex-grow\"></div>\n            <div>\n              <a\n                href={BaseUri + slug}\n                className=\"text-blue-500 hover:underline\"\n              >\n                <IoReturnUpBackOutline className=\"w-6 h-6\" />\n              </a>\n            </div>\n          </div>\n          <img src={data.image} alt=\"data\" className=\"w-full mb-4 rounded-lg\" />\n          <p className=\"mb-4\">{lang_data.description}</p>\n          <div className=\"bg-gray-100 p-8 rounded-lg shadow-md my-3\">\n            {lang_data.data}\n          </div>\n        </div>\n        <div className=\"flex flex-wrap px-4 space-x-1 rtl:space-x-reverse space-y-1 pb-5\">\n          {data.tags.map((tag, index) => (\n            <div key={index} >\n              <a className=\"bg-gray-200 p-1 rounded-md text-xs\" href={BaseUri + routes.category.path + \"/\" + tag}>\n                {\"#\" + tag}\n              </a>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["BlogDetails","_ref","theme","lang","slug","searchid","useParams","data","BlogData","find","item","_jsx","DataDetails","NotFound","NotFoundPage","className","children","_jsxs","href","lang_data","langs","console","log","split","src","logo","alt","title","created_at","BaseUri","IoReturnUpBackOutline","image","description","tags","map","tag","index","routes","category","path"],"sourceRoot":""}