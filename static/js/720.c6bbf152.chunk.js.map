{"version":3,"file":"static/js/720.c6bbf152.chunk.js","mappings":"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","sources":["configs/projectdata.tsx","app/projects/[projectid]/page.tsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["export const projectData = [\n  {\n    logo: \"./image\",\n    image:\n      \"https://api.backlinko.com/app/uploads/2019/12/the-classic-list-post.png\",\n\n    en: {\n      title: \"latest posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"آخرین پست‌ها\",\n      description: \"آخرین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"recent-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2021-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://www.blogtyrant.com/wp-content/uploads/2017/02/how-to-write-a-good-blog-post.png\",\n    en: {\n      title: \"first posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"نخستین پست‌ها\",\n      description: \"نخستین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"first-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2020-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://api.backlinko.com/app/uploads/2019/12/the-classic-list-post.png\",\n\n    en: {\n      title: \"latest posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"آخرین پست‌ها\",\n      description: \"آخرین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"recent-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2021-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://www.blogtyrant.com/wp-content/uploads/2017/02/how-to-write-a-good-blog-post.png\",\n    en: {\n      title: \"first posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"نخستین پست‌ها\",\n      description: \"نخستین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"first-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2020-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://api.backlinko.com/app/uploads/2019/12/the-classic-list-post.png\",\n\n    en: {\n      title: \"latest posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"آخرین پست‌ها\",\n      description: \"آخرین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"recent-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2021-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://www.blogtyrant.com/wp-content/uploads/2017/02/how-to-write-a-good-blog-post.png\",\n    en: {\n      title: \"first posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"نخستین پست‌ها\",\n      description: \"نخستین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"first-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2020-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://api.backlinko.com/app/uploads/2019/12/the-classic-list-post.png\",\n\n    en: {\n      title: \"latest posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"آخرین پست‌ها\",\n      description: \"آخرین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"recent-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2021-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://www.blogtyrant.com/wp-content/uploads/2017/02/how-to-write-a-good-blog-post.png\",\n    en: {\n      title: \"first posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"نخستین پست‌ها\",\n      description: \"نخستین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"first-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2020-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n];\n","import { useParams } from \"react-router-dom\";\nimport { Card, CardContent, Grid, Typography } from \"@mui/material\";\n\nimport { projectData } from \"../../../configs/projectdata\";\nimport { commonArgs } from \"../../../configs/types\";\n\nexport default function ProjectDetails({ theme, lang, slug }: commonArgs) {\n  const { projectslug } = useParams();\n  const project = projectData.find((project) => project.slug === projectslug);\n\n  if (!project) {\n    return <div>Not Found</div>;\n  }\n\n  return (\n    <div className=\"mx-4 md-20\">\n      <Card\n        className={`max-w-3xl mx-auto mt-8  shadow-md rounded-lg overflow-hidden ${theme.background}`}\n      >\n        <CardContent>\n          <div className=\"flex items-center mb-4\">\n            <img src={project.logo} alt=\"logo\" className=\"w-16 h-auto mr-4\" />\n            <div>\n              <Typography variant=\"h5\" className=\"mb-1\">\n                {lang === \"en\" ? project.en.title : project.fa.title}\n              </Typography>\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                {project.created_at}\n              </Typography>\n            </div>\n          </div>\n          <img\n            src={project.image}\n            alt=\"project\"\n            className=\"w-full mb-4 rounded-lg\"\n          />\n          <Typography variant=\"body1\" className=\"mb-4\">\n            {lang === \"en\" ? project.en.description : project.fa.description}\n          </Typography>\n          <div className=\"project-content\">\n            {lang === \"en\" ? project.en.data : project.fa.data}\n          </div>\n        </CardContent>\n        <Grid container spacing={2} className=\"p-4\">\n          {project.tags.map((tag, index) => (\n            <Grid item key={index}>\n              <Typography\n                variant=\"caption\"\n                className=\"bg-gray-200 p-1 rounded-md\"\n              >\n                {tag}\n              </Typography>\n            </Grid>\n          ))}\n        </Grid>\n      </Card>\n    </div>\n  );\n}\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["projectData","logo","image","en","title","description","data","_jsx","children","fa","slug","related_posts","tags","category","created_at","updated_at","ProjectDetails","_ref","theme","lang","projectslug","useParams","project","find","className","_jsxs","Card","concat","background","CardContent","src","alt","Typography","variant","color","Grid","container","spacing","map","tag","index","item","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as"],"sourceRoot":""}