{"version":3,"file":"static/js/478.2baff8e0.chunk.js","mappings":"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","sources":["configs/blogdata.tsx","components/blogDetailsComponent.tsx","pages/blogDetails.tsx","components/logo.tsx","components/header.tsx","components/footer.tsx","pages/layout.tsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["export const blogData = [\n  {\n    logo: \"./image\",\n    image:\n      \"https://api.backlinko.com/app/uploads/2019/12/the-classic-list-post.png\",\n\n    en: {\n      title: \"latest posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"آخرین پست‌ها\",\n      description: \"آخرین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"recent-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2021-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://www.blogtyrant.com/wp-content/uploads/2017/02/how-to-write-a-good-blog-post.png\",\n    en: {\n      title: \"first posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"نخستین پست‌ها\",\n      description: \"نخستین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"first-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2020-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://api.backlinko.com/app/uploads/2019/12/the-classic-list-post.png\",\n\n    en: {\n      title: \"latest posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"آخرین پست‌ها\",\n      description: \"آخرین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"recent-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2021-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://www.blogtyrant.com/wp-content/uploads/2017/02/how-to-write-a-good-blog-post.png\",\n    en: {\n      title: \"first posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"نخستین پست‌ها\",\n      description: \"نخستین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"first-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2020-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://api.backlinko.com/app/uploads/2019/12/the-classic-list-post.png\",\n\n    en: {\n      title: \"latest posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"آخرین پست‌ها\",\n      description: \"آخرین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"recent-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2021-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://www.blogtyrant.com/wp-content/uploads/2017/02/how-to-write-a-good-blog-post.png\",\n    en: {\n      title: \"first posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"نخستین پست‌ها\",\n      description: \"نخستین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"first-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2020-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://api.backlinko.com/app/uploads/2019/12/the-classic-list-post.png\",\n\n    en: {\n      title: \"latest posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"آخرین پست‌ها\",\n      description: \"آخرین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"recent-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2021-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n  {\n    logo: \"./image\",\n    image:\n      \"https://www.blogtyrant.com/wp-content/uploads/2017/02/how-to-write-a-good-blog-post.png\",\n    en: {\n      title: \"first posts\",\n      description: \"My latest blog posts\",\n      data: <h1> hello world</h1>,\n    },\n    fa: {\n      title: \"نخستین پست‌ها\",\n      description: \"نخستین پست های وبلاگ من\",\n      data: <h1> سلام دنیا</h1>,\n    },\n    slug: \"first-posts\",\n    related_posts: [\"post-1\", \"post-2\", \"post-3\"],\n    tags: [\"python\", \"django\", \"fastapi\", \"redis\", \"celery\"],\n    category: [\"programming\", \"web development\"],\n    created_at: \"2020-01-01\",\n    updated_at: \"2024-01-01\",\n  },\n];\n","import React from \"react\";\nimport { blogItemTypes } from \"../configs/types\";\nimport { Card, CardContent, Grid, Typography } from \"@mui/material\"; // Import Material-UI components\n\nexport function BlogDetailsComponent({ lang, theme, blog }: blogItemTypes) {\n  return (\n    <div className=\"mx-4\">\n      <Card className=\"max-w-3xl mx-auto mt-8 bg-white shadow-md rounded-lg overflow-hidden \">\n        <CardContent>\n          <div className=\"flex items-center mb-4\">\n            <img src={blog.logo} alt=\"logo\" className=\"w-16 h-auto mr-4\" />\n            <div>\n              <Typography variant=\"h5\" className=\"mb-1\">\n                {lang === \"en\" ? blog.en.title : blog.fa.title}\n              </Typography>\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                {blog.created_at}\n              </Typography>\n            </div>\n          </div>\n          <img src={blog.image} alt=\"blog\" className=\"w-full mb-4 rounded-lg\" />\n          <Typography variant=\"body1\" className=\"mb-4\">\n            {lang === \"en\" ? blog.en.description : blog.fa.description}\n          </Typography>\n          <div className=\"blog-content\">\n            {lang === \"en\" ? blog.en.data : blog.fa.data}\n          </div>\n        </CardContent>\n        <Grid container spacing={2} className=\"p-4\">\n          {blog.tags.map((tag, index) => (\n            <Grid item key={index}>\n              <Typography\n                variant=\"caption\"\n                className=\"bg-gray-200 p-1 rounded-md\"\n              >\n                {tag}\n              </Typography>\n            </Grid>\n          ))}\n        </Grid>\n      </Card>\n    </div>\n  );\n}\n","import { fullArgs } from \"../configs/types\";\nimport { Layout } from \"./layout\";\nimport { useParams } from \"react-router-dom\";\nimport { BlogDetailsComponent } from \"../components/blogDetailsComponent\";\nimport { blogData } from \"../configs/blogdata\";\nexport function BlogDetails({\n  lang,\n  toggleLang,\n  theme,\n  toggleTheme,\n}: fullArgs) {\n  const { blogslug } = useParams();\n  const blog = blogData.find((blog) => blog.slug === blogslug);\n  if (!blog) {\n    return <div>Not Found</div>;\n  }\n  return (\n    <Layout\n      lang={lang}\n      toggleLang={toggleLang}\n      theme={theme}\n      toggleTheme={toggleTheme}\n      children={<BlogDetailsComponent lang={lang} theme={theme} blog={blog} />}\n    />\n  );\n}\n","import React from \"react\";\nimport { commonArgs } from \"../configs/types\";\nfunction logo({ lang, theme }: commonArgs) {\n  return (\n    <a href=\"/\" className=\"font-sacramento text-slate-600 text-xl\">\n      Mohammadreza Amani\n    </a>\n  );\n}\n\nexport default logo;\n","import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n} from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { getMenuItems, langs } from \"../configs/site\";\nimport Logo from \"./logo\";\nimport TranslateIcon from \"@mui/icons-material/Translate\";\nimport { fullArgs } from \"../configs/types\";\n\nfunction Header({ lang, toggleLang, theme, toggleTheme }: fullArgs) {\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  console.log(lang);\n  const toggleDrawer =\n    (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\n      if (\n        event.type === \"keydown\" &&\n        ((event as React.KeyboardEvent).key === \"Tab\" ||\n          (event as React.KeyboardEvent).key === \"Shift\")\n      ) {\n        return;\n      }\n      setDrawerOpen(open);\n    };\n\n  const iconTextColor = \"text-slate-600\";\n\n  return (\n    <AppBar\n      className={`header-default black-logo-version shadow-lg`}\n      position=\"sticky\"\n      style={{ backgroundColor: theme.background }}\n    >\n      <Toolbar className=\"flex justify-between items-center sm:mx-20\">\n        <Logo lang=\"lang\" theme={theme} />\n        <div className=\"flex items-center\">\n          <nav className=\"mainmenu-nav navbar-example2 hidden sm:block\">\n            <ul className=\"primary-menu flex flex-col space-y-2 sm:flex-row sm:space-x-2 sm:space-y-0\">\n              {getMenuItems(lang).map((item, index) => (\n                <li className=\"nav-item\" key={index}>\n                  <a href={item.slug}>\n                    <Tooltip title={item.text}>\n                      <IconButton color=\"inherit\">{item.icon}</IconButton>\n                    </Tooltip>\n                  </a>\n                </li>\n              ))}\n              <li className=\"nav-item\" key=\"change language\">\n                <Tooltip\n                  title={langs[lang as keyof typeof langs].full}\n                  onClick={toggleLang}\n                >\n                  <IconButton color=\"inherit\">\n                    <TranslateIcon className={iconTextColor} />\n                  </IconButton>\n                </Tooltip>\n              </li>\n            </ul>\n          </nav>\n        </div>\n        <div className=\"block sm:hidden\">\n          <Tooltip title=\"menu\">\n            <IconButton\n              className=\"hamberger-menu\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              onClick={toggleDrawer(true)}\n            >\n              <MenuIcon className=\"text-slate-600\" />\n            </IconButton>\n          </Tooltip>\n          <Drawer\n            anchor={\n              langs[lang as keyof typeof langs].dir === \"rtl\" ? \"right\" : \"left\"\n            }\n            open={drawerOpen}\n            onClose={toggleDrawer(false)}\n            className=\"drawer-menu rounded-lg\"\n          >\n            <div className=\"p-4 pt-20\">\n              <List>\n                {getMenuItems(lang).map((item, index) => (\n                  <ListItem button key={index}>\n                    <a href={item.slug}>\n                      <ListItemIcon>{item.icon}</ListItemIcon>\n                      <ListItemText primary={item.text} />\n                    </a>\n                  </ListItem>\n                ))}\n                <ListItem button key={\"lang\"} onClick={toggleLang}>\n                  <ListItemIcon>\n                    <TranslateIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={langs[lang as keyof typeof langs].full}\n                  />\n                </ListItem>\n              </List>\n            </div>\n          </Drawer>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { siteConfig } from \"../configs/site\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport { commonArgs } from \"../configs/types\";\n\nfunction Footer({ lang, theme }: commonArgs) {\n  return (\n    <div className=\"w-full\">\n      <footer className=\"bg-black text-white text-center p-4\">\n        <p className=\"text-sm\">\n          {siteConfig.en.author} © {new Date().getFullYear()}\n        </p>\n        <p className=\"text-sm\">\n          {siteConfig.en.author} is open-source on{\" \"}\n          <a\n            href={siteConfig.github}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-white\"\n          >\n            <GitHubIcon />\n          </a>\n        </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default Footer;\n","import Header from \"../components/header\";\nimport Footer from \"../components/footer\";\nimport { veryFullArgs } from \"../configs/types\";\n\nexport function Layout({\n  lang,\n  toggleLang,\n  theme,\n  toggleTheme,\n  children,\n}: veryFullArgs) {\n  return (\n    <div className=\"flex flex-col justify-between h-screen\">\n      <div className=\"flex flex-col w-full\">\n        <Header\n          lang={lang}\n          toggleLang={toggleLang}\n          theme={theme}\n          toggleTheme={toggleTheme}\n        />\n        {children}\n      </div>\n      <Footer lang={lang} theme={theme} />\n    </div>\n  );\n}\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["blogData","logo","image","en","title","description","data","_jsx","children","fa","slug","related_posts","tags","category","created_at","updated_at","BlogDetailsComponent","_ref","lang","theme","blog","className","_jsxs","Card","CardContent","src","alt","Typography","variant","color","Grid","container","spacing","map","tag","index","item","BlogDetails","toggleLang","toggleTheme","blogslug","useParams","find","Layout","href","drawerOpen","setDrawerOpen","React","console","log","toggleDrawer","open","event","type","key","AppBar","position","style","backgroundColor","background","Toolbar","Logo","getMenuItems","Tooltip","text","IconButton","icon","langs","full","onClick","TranslateIcon","MenuIcon","Drawer","anchor","dir","onClose","List","ListItem","button","ListItemIcon","ListItemText","primary","siteConfig","author","Date","getFullYear","github","target","rel","GitHubIcon","Header","Footer","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","inProps","ref","useThemeProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as"],"sourceRoot":""}